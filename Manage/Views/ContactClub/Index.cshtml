@*@model bool*@
@{
    ViewData["Title"] = "Contact Clubs";
}

<div id="pageHeading">
    <h2 class="headingAndButton"> <i class="fa fa-file-alt"></i> Contact Clubs</h2>
</div>

@Html.AntiForgeryToken()

<div class="row rowNoMarginSide" style="width:100%;">
    <div class="col-md-12">
        <div class="box">
            <h4 class="proposalsPendingHeader">ContactClubs</h4>
            <div class="pad">
                @(Html.Kendo().Grid<ContactClub>()
                .Name("contactClubTable")
                .Columns(columns =>
                {
                columns.Bound(c => c.Id).Title("&nbsp;")
                .ClientTemplate(@"<a role='button' class='k-button k-button-icontext' href='/ContactClub/EditContactClub/${id}'><span class='k-icon k-i-edit'></span>Edit</a>")
                .Width(80).Filterable(false);

                columns.Bound(c => c.Country).Title("Country").Width(120);
                columns.Bound(c => c.League).Title("League").Width(120);
                columns.Bound(c => c.Team).Title("Team").Width(120);
                columns.Bound(c => c.Name).Title("Name").Width(120);
                columns.Bound(c => c.Position).Title("Position").Width(80);
                columns.Bound(c => c.PhoneNumber).Title("PhoneNumber").Width(120);
                columns.Bound(c => c.Email).Title("Email").Width(120);               
                columns.Bound(c => c.Comments).Title("Comments").Width(120);
                columns.Command(command => { command.Destroy(); }).Width(80);
                columns.Bound(c => c.Id).Title("&nbsp;")
                .ClientTemplate(@"<a role='button' class='k-button k-button-icontext' href='/ContactClub/ViewContactClub/${id}' ><span class='k-icon k-i-arrow-right'></span>View</a>")
                .Width(80).Filterable(false);
                })
                .ToolBar(toolbar =>
                {
                toolbar.ClientTemplate(@"<a role='button' class='k-button k-button-icontext' href='/ContactClub/ContactClubAddEdit/true' ><span class='k-icon k-i-plus'></span>Add Contact Club</a>");
                }
                )
                .Filterable(f => f.Operators(o => o.ForString(s => s.Clear().Contains("Contains").StartsWith("Starts with"))))
                .Pageable(p => p.PageSizes(new int[4] { 10, 20, 50, 100 }))
                .Sortable()
                .Scrollable(s => s.Height(485))
                .Resizable(r => r.Columns(true))
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Events(events => events.Error("error_handler"))
                .Model(model => model.Id(p => p.Id))
                .Create(update => update.Action("Create", "ContactClub"))
                .Read(read => read.Action("ContactClubs_Read", "ContactClub"))
                .Update(update => update.Action("ContactClub_Update", "ContactClub"))
                .Destroy(update => update.Action("ContactClub_Destroy", "ContactClub")) //Proposal_Destroy will just set the user IsActive property either to 'true' or 'false'
                )
                )

            </div>

        </div>
    </div>
</div>


<script>
    $(function () {
        var grid = $("#contactClubTable").data("kendoGrid");
    });

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

</script>